
plugins {
    id 'scala'
    id 'idea'
    id 'application'
}


application {
    mainClass.set('chipvm.game.ChipVM')
}



test {
    useJUnitPlatform()
    afterSuite { suite, result ->
        result.exception?.printStackTrace()
    }
}

ext {
    scalaMajorVersion = '2.13'
    scalaVersion = '2.13.11'
}


repositories {
    flatDir {
        dirs 'lib'
    }

    mavenCentral()
}

sourceSets.main.scala.srcDirs = ['src']
sourceSets.test.scala.srcDirs = ['test']

dependencies {
    implementation "org.scala-lang:scala-library:${scalaVersion}"
    implementation fileTree(include: ['*.jar'], dir: 'lib')
    testImplementation('junit:junit:4.13.2')
    testImplementation("org.scala-lang:scala-reflect") {
      version {
          strictly '2.13.11'
      }
    }
    testImplementation('org.junit.vintage:junit-vintage-engine:5.9.0')
    testImplementation("org.scalatest:scalatest_${scalaMajorVersion}:3.0.9")
}


task zip(type: Zip) {
    group = "prepareZipForSubmit"
    description = "Zip your code for submission to Codegrade"

    // To make sure you can always run this task
    outputs.upToDateWhen { false }
    dependsOn assemble

    from fileTree(dir: '.')
    include 'src/chipvm/logic/**.scala'

    archiveFileName = 'chip8.zip'
    destinationDirectory = layout.buildDirectory.dir("$projectDir")
}